function [  ] = bifurcation_sketch( funcs, dde23_soln, param, master_options )
%Basic function which does a 'simple_run' at the params

diary(strcat(master_options.datadir_specific,'log'))

try
    [branch_stst, nunst_branch_stst, ind_fold, ind_hopf] = ... 
        init_branch(funcs, ...
        dde23_soln.y(:,end), param.feed_phase.index, 400, param, ...
        'max_step',[param.feed_phase.index, (1)*pi/32], ...
        'minimal_real_part', -0.5, ...
        'reverse', 1, ...
        master_options);
catch
    fprintf('Error in stst')
end
    
% Fold
fold_branches = struct;
for i = 1:length(ind_fold)
    fold_active_branch_name = ...
        strcat('f',num2str(i),'branch');

    try
        fbranch = ...
            bifurContin_FoldHopf( ...
            funcs, ... 
            branch_stst, ...
            ind_fold(i), ...
            [param.feed_phase.index, param.feed_ampli.index], ...
            20, ...
            param,...
            'plot_prog', 1, ...
            master_options,...
            'save',0);

        fold_branches.(fold_active_branch_name) = fbranch;
    catch ME
        switch ME.identifier
            case 'br_contn:start'
                warning(ME.message);
                warning(strcat('During branch=',fold_active_branch_name));
                fold_branches.(fold_active_branch_name).error = ME;
                fold_branches.(fold_active_branch_name).fold_active_ind = ...
                    i;
                fold_branches.(fold_active_branch_name).fold_active_branch_name = ...
                    fold_active_branch_name;
            otherwise
                rethrow(ME)
        end
    end
end

% Hopf
hopf_branches = struct;
for i = 1:length(ind_hopf)
    hopf_active_branch_name = ...
        strcat('h',num2str(i),'branch');

    try
        hbranch = ...
            bifurContin_FoldHopf( ...
            funcs, ... 
            branch_stst, ...
            ind_hopf(i), ...
            [param.feed_phase.index, param.feed_ampli.index], ...
            20, ...
            param,...
            'plot_prog', 1, ...
            master_options,...
            'save',0);

        hopf_branches.(hopf_active_branch_name) = hbranch;
    catch ME
        switch ME.identifier
            case 'br_contn:start'
                warning(ME.message);
                warning(strcat('During branch=',hopf_active_branch_name));
                hopf_branches.(hopf_active_branch_name).error = ME;
                hopf_branches.(hopf_active_branch_name).hopf_active_ind = ...
                    i;
                hopf_branches.(hopf_active_branch_name).hopf_active_branch_name = ...
                    hopf_active_branch_name;
            otherwise
                rethrow(ME)
        end
    end
end

% Save hopf and fold branches
save([master_options.datadir_specific,'hopf_branches'],'hopf_branches')
save([master_options.datadir_specific,'fold_branches'],'fold_branches')

diary off

end


%% Strong field dom, strong fb 

clear;

feedPhaseMat = [1, 0; 0, 0.25];
feedAmpMat = [1, 0; 0, 0];


% For feedback phase continuation
setup_params_nonDim_CnstCplRatio(...
    'save',1, ...
    'alpha_par',0, ...
    'feed_ampli',0.5, ...
    'feed_ampliMatrix', feedAmpMat, ...
    'feed_phase',0, ...
    'feed_phaseMatrix', feedPhaseMat, ...
    'clear',0,...
    'J',560e-6,...
    'tau_fb', 0.8, ...
    'datadir_specific', ...
    '/home/bkmiller/qd-micropillar-laser-project/data_bimodal-qd-micropillars/strDomStrFbLowTau')

sweepSoln = sweeper(param.J.index, [60e-6, param.J.value], param, master_options);
dde23_soln = sweepSoln(end).timeSeries;


%%


% opt_inputs = { 'extra_condition', [1],'print_residual_info',[1] };
[branch_stst, nunst_branch_stst, ind_fold, ind_hopf] = ... 
    init_branch(funcs, ...
    dde23_soln.y(:,end), param.feed_phase.index, 500, param, ...
    'max_step',[param.feed_phase.index, (1)*pi/32], ...
    'minimal_real_part', -1, ...
    'halting_accuracy', 1e-12, ...
    'minimal_accuracy', 1e-10, ...
    'newton_max_iterations', 15, ...
    'reverse',1, ...
    master_options);
% , ...
%     'opt_inputs', opt_inputs);


%% ~300 for stab
vertBranch085 = pickAndSwitch(funcs, ...
    branch_stst, ...
    param.feed_ampli.index, ...
    250, ...
    param, ...
    'reverse',1, 'nunst_color', nunst_branch_stst, ...
    'point', 421);

plot_branch(vertBranch085, param, ...
    'axes_indParam', [param.feed_phase.index, param.feed_ampli.index], ...
    'nunst_color', vertBranch085.nunst)

save([master_options.datadir_specific,'vertBranch085.mat'],'vertBranch085');

%%
horizBranch015 = pickAndSwitch(funcs, ...
    vertBranch085, ...
    param.feed_phase.index, ...
    350, ...
    param, ...
    'axes_indParam', [param.feed_phase.index, param.feed_ampli.index], ...
    'reverse',1, ...
    'point', 298);

plot_branch(horizBranch015, param, ...
    'axes_indParam', [param.feed_phase.index, param.feed_ampli.index], ...
    'nunst_color', horizBranch015.nunst)

save([master_options.datadir_specific,'horizBranch015.mat'],'horizBranch015');

%% folds from horizBranch015

folds_horBrn015 = bifurFoldHopfMultiCreator( ...
    funcs, ...
    horizBranch015, ...
    param, ...
    horizBranch015.indFold, ...
    30);

branchplot = figure;

for i = 1:numel(folds_horBrn015)
    % Add each fold
    if isa(folds_horBrn015(i).error,'double') && folds_horBrn015(i).error == 0
        plot_branch(folds_horBrn015(i), param, ...
            'add_2_gcf', 1, 'color','r');
    end
end

save([master_options.datadir_specific,'folds_horBrn015.mat'],'folds_horBrn015');


%% No hopf, only fold
horizBranch031 = pickAndSwitch(funcs, ...
    vertBranch085, ...
    param.feed_phase.index, ...
    350, ...
    param, ...
    'axes_indParam', [param.feed_phase.index, param.feed_ampli.index], ...
    'reverse',1, ...
    'point', 246);

plot_branch(horizBranch031, param, ...
    'nunst_color', horizBranch031.nunst)

%% some hopf, indHopf(2:3) are from stable to unstable, lines on side hopfs
horizBranch04 = pickAndSwitch(funcs, ...
    vertBranch085, ...
    param.feed_phase.index, ...
    200, ...
    param, ...
    'axes_indParam', [param.feed_phase.index, param.feed_ampli.index], ...
    'reverse',1, ...
    'point', 216);

plot_branch(horizBranch04, param, ...
    'nunst_color', horizBranch04.nunst)

save([master_options.datadir_specific,'horizBranch04.mat'],'horizBranch04');


%% some hopf, lines on side hopfs
horizBranch045 = pickAndSwitch(funcs, ...
    vertBranch085, ...
    param.feed_phase.index, ...
    200, ...
    param, ...
    'axes_indParam', [param.feed_phase.index, param.feed_ampli.index], ...
    'reverse',1, ...
    'point', 198);

plot_branch(horizBranch045, param, ...
    'nunst_color', horizBranch045.nunst)

save([master_options.datadir_specific,'horizBranch045.mat'],'horizBranch045');


%% hopf from horizBranch045, lines on side hopfs

hopfs_horBrn045 = bifurFoldHopfMultiCreator( ...
    funcs, ...
    horizBranch045, ...
    param, ...
    horizBranch045.indHopf, ...
    20);

branchplot = figure;

for i = 1:numel(hopfs_horBrn045)
    % Add each hopf
    if isa(hopfs_horBrn045(i).error,'double') && hopfs_horBrn045(i).error == 0
        plot_branch(hopfs_horBrn045(i), param, ...
            'add_2_gcf', 1, 'color','c');
    end
end

save([master_options.datadir_specific,'hopfs_horBrn045.mat'],'hopfs_horBrn045');


%% some hopf
horizBranch05 = pickAndSwitch(funcs, ...
    vertBranch085, ...
    param.feed_phase.index, ...
    200, ...
    param, ...
    'axes_indParam', [param.feed_phase.index, param.feed_ampli.index], ...
    'reverse',1, ...
    'point', 181);

plot_branch(horizBranch05, param, ...
    'nunst_color', horizBranch05.nunst)

save([master_options.datadir_specific,'horizBranch05.mat'],'horizBranch05');

%% hopf from horizBranch05, lines on side hopfs

hopfs_horBrn05 = bifurFoldHopfMultiCreator( ...
    funcs, ...
    horizBranch05, ...
    param, ...
    horizBranch05.indHopf, ...
    60);

branchplot = figure;

for i = 1:numel(hopfs_horBrn05)
    % Add each hopf
    if isa(hopfs_horBrn05(i).error,'double') && hopfs_horBrn05(i).error == 0
        plot_branch(hopfs_horBrn05(i), param, ...
            'add_2_gcf', 1, 'color','c');
    end
end

save([master_options.datadir_specific,'hopfs_horBrn05.mat'],'hopfs_horBrn05');

%% try and find hopfs vertically
% Maybe try going above 1??

vertBranch31 = pickAndSwitch(funcs, ...
    horizBranch05, ...
    param.feed_ampli.index, ...
    200, ...
    param, ...
    'axes_indParam', [param.feed_phase.index, param.feed_ampli.index], ...
    'reverse',1, ...
    'point', 175);

plot_branch(vertBranch31, param, ...
    'nunst_color', vertBranch31.nunst)

save([master_options.datadir_specific,'vertBranch31.mat'],'vertBranch31');

%% THIS ONE GOES PLACES! LARGE FEEDPHASE VERT CUT
vertBranch905 = pickAndSwitch(funcs, ...
    horizBranch05, ...
    param.feed_ampli.index, ...
    350, ...
    param, ...
    'axes_indParam', [param.feed_phase.index, param.feed_ampli.index], ...
    'reverse',1, ...
    'point', 114);

plot_branch(vertBranch905, param, ...
    'nunst_color', vertBranch905.nunst, 'twoOmegaNunst', vertBranch905.nunst)

save([master_options.datadir_specific,'vertBranch905.mat'],'vertBranch905');



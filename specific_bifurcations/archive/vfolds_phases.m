%% Low feed amp
% load vfolds

% parameter setup
par_below_v = setup_params_nonDim_CnstCplRatio(...
    'save',0, ...
    'J', current, ...
    'feed_ampli', 0.030, ...
    'feed_ampliMatrix', feedAmpMat, ...
    'feed_phase', 0, ...
    'feed_phaseMatrix', feedPhaseMat, ...
    'tau_fb', tau_fb_par, ...
    'alpha_par',alpha_par, ...
    'clear',0,...
    'populate_wrkspc', 0);

turn_on_below_v = turn_on(par_below_v, [1, 0, 1, 0, 0]);
% figure
% plot(turn_on_below_v.x, turn_on_below_v.y)

[amp_BelowV,~] = SetupStst( ...
    funcs, ...
    'contpar',[param.feed_ampli.index, param.omega1.index], ...
    'corpar',[param.omega1.index],...
    'x', turn_on_below_v.y(:,end), ...
    'parameter',par_below_v.values(1:end-1),...
    opt_inputs{:},...
    st_amp{:});

amp_BelowV = bcont( funcs, amp_BelowV, ...
                            50, 50 );
amp_BelowV = branch_stability(funcs, amp_BelowV);

pts = branch_pts_near_param( amp_BelowV, param.feed_ampli.index, 0, 0.009 );

[phases_below_v_low{3},~] = SetupStst( ...
        funcs, ...
        'contpar',[param.feed_phase.index, param.omega1.index], ...
        'corpar',[param.omega1.index],...
        'x', amp_BelowV.point(pts(1)).x, ...
        'parameter', amp_BelowV.point(pts(1)).parameter,...
        opt_inputs{:},...
        st_phase{:});

    phases_below_v_low{3} = bcont( funcs, phases_below_v_low{3}, ...
                                50, 50 );
    phases_below_v_low{3} = branch_stability(funcs, phases_below_v_low{3});


%% plot
figure;
for i = 1:numel(phases_below_v_low)
    plot_branch3( phases_below_v_low{i}, ...
        param, ...
        'axes_indParam', {param.feed_phase.index, param.feed_ampli.index, 'x1'}, ...
        'nunst_color', phases_below_v_low{i}.nunst, ...
        'add_2_gcf', 1)
end

%% mid1 phase
pts = branch_pts_near_param( ampStrDom, ...
                       param.feed_ampli.index, ...
                       init_phase_StrDom.point(1).parameter(param.feed_ampli.index), ...
                       0.004 );
pts = pts(ampStrDom.nunst(pts) == 2);

[unst_phase_mid1,~] = SetupStst( ...
    funcs, ...
    'contpar',[param.feed_phase.index, param.omega1.index], ...
    'corpar',[param.omega1.index],...
    'x', ampStrDom.point(pts).x, ...
    'parameter',ampStrDom.point(pts).parameter,...
    opt_inputs{:},...
    st_phase{:});

unst_phase_mid1 = bcont( funcs, unst_phase_mid1, ...
                            200, 200 );
unst_phase_mid1 = branch_stability(funcs, unst_phase_mid1);



%% plot
figure;
plot_branch3( init_phase_StrDom, ...
    param, ...
    'axes_indParam', {param.feed_phase.index, param.feed_ampli.index, 'x1'}, ...
    'nunst_color', init_phase_StrDom.nunst, ...
    'add_2_gcf', 1)

plot_branch3( unst_phase_mid1, ...
    param, ...
    'axes_indParam', {param.feed_phase.index, param.feed_ampli.index, 'x1'}, ...
    'nunst_color', unst_phase_mid1.nunst, ...
    'add_2_gcf', 1)

plot_branch3( init_phase_WeakDom, ...
    param, ...
    'axes_indParam', {param.feed_phase.index, param.feed_ampli.index, 'x1'}, ...
    'nunst_color', init_phase_WeakDom.nunst, ...
    'add_2_gcf', 1)

%% mid2 amp (gap between two parabola folds)
% in this case, I know it is close to 0.34

pts = branch_pts_near_param( ampWeakDoms{3}, ...
                       param.feed_ampli.index, ...
                       0.34, ...
                       0.004 );

mid2_phases = cell(1,numel(pts));

for i = 1:numel(pts)
    [mid2_phases{i},~] = SetupStst( ...
    funcs, ...
    'contpar',[param.feed_phase.index, param.omega1.index], ...
    'corpar',[param.omega1.index],...
    'x', ampWeakDoms{3}.point(pts(i)).x, ...
    'parameter',ampWeakDoms{3}.point(pts(i)).parameter,...
    opt_inputs{:},...
    st_amp{:});
    mid2_phases{i} = bcont( funcs, mid2_phases{i}, ...
                                200, 200 );
    mid2_phases{i} = branch_stability(funcs, mid2_phases{i});
end

%% plot
figure;
for i = 1:numel(mid2_phases)
    plot_branch3( mid2_phases{i}, ...
        param, ...
        'axes_indParam', {param.feed_phase.index, param.feed_ampli.index, 'x1'}, ...
        'nunst_color', mid2_phases{i}.nunst, ...
        'add_2_gcf', 1)
end

%% high amp

% parameter setup
par_high = setup_params_nonDim_CnstCplRatio(...
    'save',0, ...
    'J', current, ...
    'feed_ampli', 0.36, ...
    'feed_ampliMatrix', feedAmpMat, ...
    'feed_phase', 0, ...
    'feed_phaseMatrix', feedPhaseMat, ...
    'tau_fb', tau_fb_par, ...
    'alpha_par',alpha_par, ...
    'clear',0,...
    'populate_wrkspc', 0);

turn_on_high = turn_on(par_high, [1, 0, 1, 0, 0]);

[phase_high,~] = SetupStst( ...
    funcs, ...
    'contpar',[param.feed_phase.index, param.omega1.index], ...
    'corpar',[param.omega1.index],...
    'x', turn_on_high.y(:,end), ...
    'parameter',par_high.values(1:end-1),...
    opt_inputs{:},...
    st_amp{:});

phase_high = bcont( funcs, phase_high, ...
                            400, 400 );
phase_high = branch_stability(funcs, phase_high);

%% plot
figure;
plot_branch3( phase_high, ...
    param, ...
    'axes_indParam', {param.feed_phase.index, param.feed_ampli.index, 'x1'}, ...
    'nunst_color', phase_high.nunst, ...
    'add_2_gcf', 1)

%% extra fold?!
% it is the other parabola one
possible = [];
for i = 1:numel(phase_high.indFold)
    if phase_high.point(phase_high.indFold(i)).x(1) < 0.2
        possible(end+1) = phase_high.indFold(i);
    end
end
finds = intersect(destabilize_finder(phase_high.nunst), possible);

% WeakDom fold
[foldfuncs,highAmpFold,~]=SetupRWFold( ...
    funcs, ...
    phase_high, ...
    finds(1),...
    'contpar', ...
    [param.feed_phase.index, param.feed_ampli.index, param.omega1.index], ...
    'dir',param.feed_ampli.index, ...
    opt_inputs{:},...
    st_bif{:}); 

highAmpFold = bcont( foldfuncs, highAmpFold, 50, 50 );

%% plot
plot_branch3( highAmpFold, ...
    param, ...
    'axes_indParam', {param.feed_phase.index, param.feed_ampli.index, 'x1'}, ...
    'color', 'r', ...
    'PlotStyle', { 'LineStyle', '-', 'Marker', '.' }, ...
    'add_2_gcf', 1)

%% vhigh amp

% parameter setup
par_vhigh = setup_params_nonDim_CnstCplRatio(...
    'save',0, ...
    'J', current, ...
    'feed_ampli', 0.38, ...
    'feed_ampliMatrix', feedAmpMat, ...
    'feed_phase', 0, ...
    'feed_phaseMatrix', feedPhaseMat, ...
    'tau_fb', tau_fb_par, ...
    'alpha_par',alpha_par, ...
    'clear',0,...
    'populate_wrkspc', 0);

turn_on_vhigh = turn_on(par_vhigh, [1, 0, 1, 0, 0]);

[phase_vhigh,~] = SetupStst( ...
    funcs, ...
    'contpar',[param.feed_phase.index, param.omega1.index], ...
    'corpar',[param.omega1.index],...
    'x', turn_on_vhigh.y(:,end), ...
    'parameter',par_vhigh.values(1:end-1),...
    opt_inputs{:},...
    st_amp{:});

phase_vhigh = bcont( funcs, phase_vhigh, ...
                            400, 400 );
phase_vhigh = branch_stability(funcs, phase_vhigh);

%% plot
figure;
plot_branch3( phase_vhigh, ...
    param, ...
    'axes_indParam', {param.feed_phase.index, param.feed_ampli.index, 'x1'}, ...
    'nunst_color', phase_vhigh.nunst, ...
    'add_2_gcf', 1)


%% Phase collection


%% Folds

folds = {};

% increasing intensity
folds{1} = fold_v_Weak;
folds{end+1} = highAmpFold;
folds{end+1} = foldsFromMidAmpWeakDom{3};
folds{end+1} = foldsFromMidAmpWeakDom{2};
folds{end+1} = foldsFromMidAmpWeakDom{1};
folds{end+1} = fold_v_Str;



%% plot
figure;
for i = 1:numel(folds)
    plot_branch3( folds{i}, ...
    param, ...
    'axes_indParam', {param.feed_phase.index, param.feed_ampli.index, 'x1'}, ...
    'color', 'r', ...
    'PlotStyle', { 'LineStyle', '-', 'Marker', '.' }, ...
    'add_2_gcf', 1)
end

%% Phases

phases = {};

% low
for i = 1:numel(phases_below_v_low)
    phases{end+1} = phases_below_v_low{i};
end

% low loops
phases{end+1} = init_phase_StrDom;
phases{end+1} = unst_phase_mid1;
phases{end+1} = init_phase_WeakDom;

% mid below double parabolas
for i = 1:numel(mid2_phases) - 1
    phases{end+1} = mid2_phases{i};
end

% mid between double parabolas
phases{end+1} = phase_high;

% high
phases{end+1} = phase_vhigh;

%% plot
figure
for i = 1:numel(phases)
    plot_branch3( phases{i}, ...
        param, ...
        'axes_indParam', {param.feed_phase.index, param.feed_ampli.index, 'x1'}, ...
        'nunst_color', phases{i}.nunst, ...
        'add_2_gcf', 1)
end

%% save?
if 1
    % save location
    datadir = strcat(data_directory(), 'specific_bifurcations/');
    while isdir(datadir) == 0
        mkdir(datadir);
    end
    
    save(strcat(datadir, 'phase_collection'))
end
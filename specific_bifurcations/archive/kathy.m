clear;

% Laser/FB settings
current = 560e-6;
fbAmp = 0.2;
fbPhase = 0;
alpha_par = 0;
tau_fb_par = 0.8;

% feedback matrix settings
feedAmpMat = [1, 0; 0, 0];
feedPhaseMat = [1, 1; 1, 1];

% bifurcation setup
aRot=...
    [0,-1,0,0,0;...
    1,0,0,0,0;...
    0,0,0,0,0;...
    0,0,0,0,0;...
    0,0,0,0,0];
expRot = @(phi)[...
    cos(phi),-sin(phi),0,0,0; ...
    sin(phi),cos(phi),0,0,0; ...
    0,0,1,0,0; ...
    0,0,0,1,0; ...
    0,0,0,0,1];
rhs = @(x,p)nonDim_bimodalINTENSITYSystem_CnstCplRatio( ...
    x(1,1,:) + 1i*x(2,1,:), x(1,2,:) + 1i*x(2,2,:),... % Es, EsTau
    x(3,1,:), x(3,2,:),... % Iw, IwTau
    x(4,1,:), ... % rho
    x(5,1,:), ... % n
    feedPhaseMat, feedAmpMat, ...
    p(1),p(2),p(3),p(4),p(5),p(6),p(7),p(8),p(9),p(10),p(11),...
    p(12),p(13),p(14),p(15),p(16),p(17),p(18),p(19),p(20),p(21),...
    p(22),p(23),p(24),p(25),p(26),p(27),p(28),p(29)); % Leave out omega
opt_inputs = {'extra_condition',1,'print_residual_info',0};
funcs = set_rotfuncs( ...
    'sys_rhs',rhs, ... 
    'rotation',aRot, ...
    'exp_rotation',expRot, ... 
    'sys_tau',@()bimodal_sys_tau, ...
    'x_vectorized',true);

%% Weak dominating, Time Series
% Using turn on time series, we can find the stable case where the weak
% field dominates the output of the laser.

% parameter setup
paramWeakDom = setup_params_nonDim_CnstCplRatio(...
    'save',0, ...
    'J', current, ...
    'feed_ampli',fbAmp, ...
    'feed_ampliMatrix', feedAmpMat, ...
    'feed_phase',fbPhase, ...
    'feed_phaseMatrix', feedPhaseMat, ...
    'tau_fb', tau_fb_par, ...
    'alpha_par',alpha_par, ...
    'clear',0,...
    'populate_wrkspc', 0);

% Turn On solver
systemWeakDom = @(x)nonDim_bimodalINTENSITYSystem_CnstCplRatio(...
    x(1,1,:) + 1i*x(2,1,:), x(1,2,:) + 1i*x(2,2,:),... % Es, EsTau
    x(3,1,:), x(3,2,:),... % Iw, IwTau
    x(4,1,:), ... % rho
    x(5,1,:), ... % n
    paramWeakDom.cplPar.feed_phaseMatrix, ...
    paramWeakDom.cplPar.feed_ampliMatrix, ...
    paramWeakDom.values(1),paramWeakDom.values(2), ...
    paramWeakDom.values(3),paramWeakDom.values(4), ...
    paramWeakDom.values(5),paramWeakDom.values(6), ...
    paramWeakDom.values(7),paramWeakDom.values(8), ...
    paramWeakDom.values(9),paramWeakDom.values(10), ...
    paramWeakDom.values(11),paramWeakDom.values(12), ...
    paramWeakDom.values(13),paramWeakDom.values(14), ...
    paramWeakDom.values(15),paramWeakDom.values(16), ...
    paramWeakDom.values(17),paramWeakDom.values(18), ...
    paramWeakDom.values(19),paramWeakDom.values(20), ...
    paramWeakDom.values(21),paramWeakDom.values(22), ...
    paramWeakDom.values(23),paramWeakDom.values(24), ...
    paramWeakDom.values(25),paramWeakDom.values(26), ...
    paramWeakDom.values(27),paramWeakDom.values(28), ...
    paramWeakDom.values(29)); % Leave out omega

lags = paramWeakDom.values(paramWeakDom.tau_fb.index);
hist = [1e-9, 0, 1e-9, 0, 0];
timeSpan = [0, 15];

timeSeriesWeakDom = dde23( ...
    @(t,y,z)systemWeakDom([y,z]),...
    lags,hist,timeSpan,ddeset('RelTol',10^-8)); % , 'OutputFcn', @odeplot



%% Weak dominating, Bifurcation Amplitude
% Now we will use the time series from above to explore the bifurcations in
% the weak dominating case.


stepBoundWeakDom = { ...
    'step',0.003, ...
    'max_step', ...
    [paramWeakDom.feed_ampli.index,0.006, ...
    paramWeakDom.omega1.index,0.1], ...
    'newton_max_iterations',10, ...
    'max_bound',[paramWeakDom.feed_ampli.index,2], ...
    'min_bound', [paramWeakDom.feed_ampli.index,-2], ...
    'halting_accuracy',1e-10, ...
    'minimal_accuracy',1e-8};

[branchStstWeakDom,~] = SetupStst( ...
    funcs, ...
    'contpar',[paramWeakDom.feed_ampli.index, paramWeakDom.omega1.index], ...
    'corpar',[paramWeakDom.omega1.index],...
    'x', timeSeriesWeakDom.y(:,end), ...
    'parameter',paramWeakDom.values(1:end-1),...
    opt_inputs{:},...
    stepBoundWeakDom{:});

% calculate
[branchStstWeakDom,~,~,~] = br_contn(funcs,branchStstWeakDom,200);
branchStstWeakDom = br_rvers(branchStstWeakDom);
[branchStstWeakDom,~,~,~] = br_contn(funcs,branchStstWeakDom,90);

% stability analysis
[branchStstWeakDom.nunst,~,~,branchStstWeakDom.point] = GetRotStability( ...
    branchStstWeakDom, ...
    funcs, 1);
branchStstWeakDom.indFold = find(abs(diff(branchStstWeakDom.nunst))==1);
branchStstWeakDom.indHopf = find(abs(diff(branchStstWeakDom.nunst))==2);
branchStstWeakDom.error = 0;


%% Strong dominating
% You can find this time series by sweeping up, but I am too lasy to write
% a sweep program for this system. Instead, I'm going to guess a history
% which might get me into the regime with the strong field dominating.

paramStrDom = setup_params_nonDim_CnstCplRatio(...
    'save',0, ...
    'J', current, ...
    'feed_ampli',fbAmp, ...
    'feed_ampliMatrix', feedAmpMat, ...
    'feed_phase',fbPhase, ...
    'feed_phaseMatrix', feedPhaseMat, ...
    'tau_fb', tau_fb_par, ...
    'alpha_par',alpha_par, ...
    'clear',0,...
    'populate_wrkspc', 0);

% Turn On solver
systemStrDom = @(x)nonDim_bimodalINTENSITYSystem_CnstCplRatio(...
    x(1,1,:) + 1i*x(2,1,:), x(1,2,:) + 1i*x(2,2,:),... % Es, EsTau
    x(3,1,:), x(3,2,:),... % Iw, IwTau
    x(4,1,:), ... % rho
    x(5,1,:), ... % n
    paramStrDom.cplPar.feed_phaseMatrix, ...
    paramStrDom.cplPar.feed_ampliMatrix, ...
    paramStrDom.values(1),paramStrDom.values(2), ...
    paramStrDom.values(3),paramStrDom.values(4), ...
    paramStrDom.values(5),paramStrDom.values(6), ...
    paramStrDom.values(7),paramStrDom.values(8), ...
    paramStrDom.values(9),paramStrDom.values(10), ...
    paramStrDom.values(11),paramStrDom.values(12), ...
    paramStrDom.values(13),paramStrDom.values(14), ...
    paramStrDom.values(15),paramStrDom.values(16), ...
    paramStrDom.values(17),paramStrDom.values(18), ...
    paramStrDom.values(19),paramStrDom.values(20), ...
    paramStrDom.values(21),paramStrDom.values(22), ...
    paramStrDom.values(23),paramStrDom.values(24), ...
    paramStrDom.values(25),paramStrDom.values(26), ...
    paramStrDom.values(27),paramStrDom.values(28), ...
    paramStrDom.values(29)); % Leave out omega

lags = paramStrDom.values(paramStrDom.tau_fb.index);
hist = [0.9^2, 0, 0.01, 0.6, 14];
timeSpan = [0, 15];

timeSeriesStrDom = dde23( ...
    @(t,y,z)systemStrDom([y,z]),...
    lags,hist,timeSpan,ddeset('RelTol',10^-8)); % , 'OutputFcn', @odeplot

%% Strong dominating, Bifurcation
% Now we will use the time series from above to explore the bifurcations in
% the strong dominating case.
branch_length = 120;

stepBoundStrDom = {'step',0.009, ...
    'max_step', ...
    [paramStrDom.feed_ampli.index,0.006, ...
    paramWeakDom.omega1.index,0.1], ...
    'newton_max_iterations',10, ...
    'max_bound',[paramStrDom.feed_ampli.index,2], ...
    'min_bound', [paramStrDom.feed_ampli.index,-2], ...
    'halting_accuracy',1e-10, ...
    'minimal_accuracy',1e-8};

[branchStstStrDom,~]=SetupStst(funcs, ...
    'contpar',[paramStrDom.feed_ampli.index, paramStrDom.omega1.index], ...
    'corpar',[paramStrDom.omega1.index],...
    'x', timeSeriesStrDom.y(:,end), ...
    'parameter',paramStrDom.values(1:end-1),...
    opt_inputs{:},...
    stepBoundStrDom{:});

% calculate
[branchStstStrDom,~,~,~] = br_contn(funcs,branchStstStrDom,branch_length);
branchStstStrDom = br_rvers(branchStstStrDom);
[branchStstStrDom,~,~,~] = br_contn(funcs,branchStstStrDom,round(branch_length/4));

% stability analysis
[branchStstStrDom.nunst,~,~,branchStstStrDom.point] = GetRotStability(...
    branchStstStrDom, ...
    funcs, 1);
branchStstStrDom.indFold = find(abs(diff(branchStstStrDom.nunst))==1);
branchStstStrDom.indHopf = find(abs(diff(branchStstStrDom.nunst))==2);
branchStstStrDom.error = 0;

%% Strong dominating, Bifurcation
% Now we will use the time series from above to explore the bifurcations in
% the strong dominating case.
branch_length = 120;

stepBoundStrDom = {'step',0.009, ...
    'max_step', ...
    [paramStrDom.feed_ampli.index,0.006, ...
    paramWeakDom.omega1.index,0.1], ...
    'newton_max_iterations',10, ...
    'max_bound',[paramStrDom.feed_ampli.index,2], ...
    'min_bound', [paramStrDom.feed_ampli.index,-2], ...
    'halting_accuracy',1e-10, ...
    'minimal_accuracy',1e-8};

[branchStstStrDom,~]=SetupStst(funcs, ...
    'contpar',[paramStrDom.feed_ampli.index, paramStrDom.omega1.index], ...
    'corpar',[paramStrDom.omega1.index],...
    'x', timeSeriesStrDom.y(:,end), ...
    'parameter',paramStrDom.values(1:end-1),...
    opt_inputs{:},...
    stepBoundStrDom{:});

% calculate
[branchStstStrDom,~,~,~] = br_contn(funcs,branchStstStrDom,branch_length);
branchStstStrDom = br_rvers(branchStstStrDom);
[branchStstStrDom,~,~,~] = br_contn(funcs,branchStstStrDom,round(branch_length/4));

% stability analysis
[branchStstStrDom.nunst,~,~,branchStstStrDom.point] = GetRotStability(...
    branchStstStrDom, ...
    funcs, 1);
branchStstStrDom.indFold = find(abs(diff(branchStstStrDom.nunst))==1);
branchStstStrDom.indHopf = find(abs(diff(branchStstStrDom.nunst))==2);
branchStstStrDom.error = 0;

%% plot
plot_branch3( branchStstWeakDom, ...
    paramWeakDom, ...
    'axes_indParam', {paramWeakDom.feed_phase.index, paramWeakDom.feed_ampli.index, 'x1'}, ...
    'nunst_color', branchStstWeakDom.nunst )

plot_branch3( branchStstStrDom, ...
    paramStrDom, ...
    'axes_indParam', {paramStrDom.feed_phase.index, paramStrDom.feed_ampli.index, 'x1'}, ...
    'nunst_color', branchStstStrDom.nunst, ...
    'add_2_gcf', 1)

%% follow in weak dom phase

stepBoundWeakDomPhase = { ...
    'step',pi/64, ...
    'max_step',...
    [paramWeakDom.feed_phase.index,pi/32, ...
    paramWeakDom.omega1.index,0.1], ...
    'newton_max_iterations',10, ...
    'max_bound',[paramWeakDom.feed_phase.index,10*pi], ...
    'min_bound', [paramWeakDom.feed_phase.index,-10*pi], ...
    'halting_accuracy',1e-10, ...
    'minimal_accuracy',1e-8};

[branchStstWeakDomPhase,~] = SetupStst( ...
        funcs, ...
        'contpar',[paramWeakDom.feed_phase.index, paramWeakDom.omega1.index], ...
        'corpar',[paramWeakDom.omega1.index],...
        'x', branchStstWeakDom.point(end/2).x, ...
        'parameter',branchStstWeakDom.point(end/2).parameter,...
        opt_inputs{:},...
        stepBoundWeakDomPhase{:});

% calculate
[branchStstWeakDomPhase,~,~,~] = br_contn(funcs,branchStstWeakDomPhase, 20);
branchStstWeakDomPhase = br_rvers(branchStstWeakDomPhase);

%% follow in  strnog phase
stepBoundStrDomPhase = { ...
    'step',pi/32, ...
    'max_step', ...
    [paramStrDom.feed_phase.index,pi/32, ...
    paramWeakDom.omega1.index,0.1], ...
    'newton_max_iterations',10, ...
    'max_bound',[paramStrDom.feed_phase.index,20*pi], ...
    'min_bound', [paramStrDom.feed_phase.index,-20*pi], ...
    'halting_accuracy',1e-10, ...
    'minimal_accuracy',1e-8};

[branchStstStrDomPhase,~] = SetupStst( ...
        funcs, ...
        'contpar',[paramStrDom.feed_phase.index, paramStrDom.omega1.index], ...
        'corpar',[paramStrDom.omega1.index],...
        'x', branchStstStrDom.point(end/2).x, ...
        'parameter',branchStstStrDom.point(end/2).parameter,...
        opt_inputs{:},...
        stepBoundStrDomPhase{:});
    
% calculate
[branchStstStrDomPhase,~,~,~] = br_contn(funcs,branchStstStrDomPhase, 20);
branchStstStrDomPhase = br_rvers(branchStstStrDomPhase);

%% continue in amp strong
[branchStstStrDom2,~]=SetupStst(funcs, ...
    'contpar',[paramStrDom.feed_ampli.index, paramStrDom.omega1.index], ...
    'corpar',[paramStrDom.omega1.index],...
    'x', branchStstStrDomPhase.point(end-1).x, ...
    'parameter',branchStstStrDomPhase.point(end-1).parameter,...
    opt_inputs{:},...
    stepBoundStrDom{:});

% calculate
[branchStstStrDom2,~,~,~] = br_contn(funcs,branchStstStrDom2,branch_length);
branchStstStrDom2 = br_rvers(branchStstStrDom2);
[branchStstStrDom2,~,~,~] = br_contn(funcs,branchStstStrDom2,round(branch_length));

% stability analysis
[branchStstStrDom2.nunst,~,~,branchStstStrDom2.point] = GetRotStability(...
    branchStstStrDom2, ...
    funcs, 1);
branchStstStrDom2.indFold = find(abs(diff(branchStstStrDom2.nunst))==1);
branchStstStrDom2.indHopf = find(abs(diff(branchStstStrDom2.nunst))==2);
branchStstStrDom2.error = 0;

%% follow amp weak
[branchStstWeakDom2,~] = SetupStst( ...
    funcs, ...
    'contpar',[paramWeakDom.feed_ampli.index, paramWeakDom.omega1.index], ...
    'corpar',[paramWeakDom.omega1.index],...
    'x', branchStstWeakDomPhase.point(end-1).x, ...
    'parameter',branchStstWeakDomPhase.point(end-1).parameter,...
    opt_inputs{:},...
    stepBoundWeakDom{:});

[branchStstWeakDom2,~,~,~] = br_contn(funcs,branchStstWeakDom2,branch_length);
branchStstWeakDom2 = br_rvers(branchStstWeakDom2);
[branchStstWeakDom2,~,~,~] = br_contn(funcs,branchStstWeakDom2,round(branch_length/4));

% calculate
[branchStstWeakDom2,~,~,~] = br_contn(funcs,branchStstWeakDom2,branch_length);
branchStstWeakDom2 = br_rvers(branchStstWeakDom2);
[branchStstWeakDom2,~,~,~] = br_contn(funcs,branchStstWeakDom2,round(branch_length/4));

% stability analysis
[branchStstWeakDom2.nunst,~,~,branchStstWeakDom2.point] = GetRotStability(...
    branchStstWeakDom2, ...
    funcs, 1);
branchStstWeakDom2.indFold = find(abs(diff(branchStstWeakDom2.nunst))==1);
branchStstWeakDom2.indHopf = find(abs(diff(branchStstWeakDom2.nunst))==2);
branchStstWeakDom2.error = 0;

%% again plkot

% plot_branch3( branchStstStrDom2(65:end), ...
%     paramWeakDom, ...
%     'axes_indParam', {paramWeakDom.feed_phase.index, paramWeakDom.feed_ampli.index, 'x1'}, ...
%     'nunst_color', branchStstStrDom2.nunst(65:end), ...
%     'add_2_gcf', 1)

plot_branch3( branchStstWeakDom2, ...
    paramStrDom, ...
    'axes_indParam', {paramStrDom.feed_phase.index, paramStrDom.feed_ampli.index, 'x1'}, ...
     'nunst_color', branchStstWeakDom2.nunst, ...
    'add_2_gcf', 1)
%% Setup General
clear;

% Load and find the relevant phases
load(strcat(data_directory(), 'specific_bifurcations/ecms.mat'))

st_bif_cur_amp = steps_bif(param, ...
    'step', 0.001, ...
    'max_step', [param.feed_ampli.index, 0.003, ...
                 param.J.index, 5e-6, ...
                 param.omega1.index, 0.01], ...
    'max_bound', [param.feed_ampli.index, 0.5, ...
                  param.J.index, 1400e-6], ...
    'min_bound', [param.feed_ampli.index, -0.1, ...
                  param.J.index, 100e-6]);
st_cur = { ...
    'step', 10e-6, ...
    'max_step', [param.J.index, 20e-6, param.omega1.index, 0.05], ...
    'newton_max_iterations', 10, ...
    'max_bound', [param.J.index, 1400e-6], ...
    'min_bound', [param.J.index, 100e-6], ...
    'halting_accuracy', 1e-12, ...
    'minimal_accuracy', 1e-10};

%% extend example ecm branches into current
curs_famp0304_phase0 = {};
next_pt = branch_pts_near_param(famp_cur560_phase0{3,4}, ...
                      param.feed_ampli.index, ...
                      famp_cur560_phase0{1,1}.point(1).parameter(param.feed_ampli.index), ...
                      0.001);

[cur_famp0304_phase0{1},~] = SetupStst( ...
    funcs, ...
    'contpar',[param.J.index, param.omega1.index], ...
    'corpar',[param.omega1.index],...
    'x', famp_cur560_phase0{1,1}.point(1).x, ...
    'parameter', famp_cur560_phase0{1,1}.point(1).parameter,...
    opt_inputs{:},...
    st_cur{:});

pars = famp_cur560_phase0{3,4}.point(next_pt).parameter;
pars(param.feed_ampli.index) = famp_cur560_phase0{1,1}.point(1).parameter(param.feed_ampli.index);
[cur_famp0304_phase0{2},~] = SetupStst( ...
    funcs, ...
    'contpar',[param.J.index, param.omega1.index], ...
    'corpar',[param.omega1.index],...
    'x', famp_cur560_phase0{3,4}.point(next_pt).x, ...
    'parameter', pars,...
    opt_inputs{:},...
    st_cur{:});

for i = 1:2
    cur_famp0304_phase0{i} = bcont( funcs, cur_famp0304_phase0{i}, ...
                                1000, 1000 );
    cur_famp0304_phase0{i} = branch_stability(funcs, cur_famp0304_phase0{i});
end

%% continue the fold
[fold_cur_famp_funcs, fold_cur_famp_phase0, ~]=SetupRWFold( ...
    funcs, ...
    cur_famp0304_phase0{1}, ...
    cur_famp0304_phase0{1}.indFold(1),...
    'contpar', ...
    [param.J.index, param.feed_ampli.index, param.omega1.index], ...
    'dir',param.feed_ampli.index, ...
    opt_inputs{:},...
    st_bif_cur_amp{:}); 

fold_cur_famp_phase0 = bcont( fold_cur_famp_funcs, ...
                              fold_cur_famp_phase0, ...
                              100, ...
                              100 );
                          
%% Continue the hopf
[hopf_cur_famp_phase0, ~] = SetupRWHopf( ...
    funcs, ...
    cur_famp0304_phase0{1}, ...
    cur_famp0304_phase0{1}.indHopf(1),...
    'contpar', ...
    [param.J.index, param.feed_ampli.index, param.omega1.index], ...
    'dir',param.feed_ampli.index, ...
    opt_inputs{:},...
    st_bif_cur_amp{:});

hopf_cur_famp_phase0 = bcont( funcs, ...
                              hopf_cur_famp_phase0, ...
                              100, ...
                              100 );
                          

%% same for pi/2
curs_famp0303_phasePi2 = {};
next_pt = branch_pts_near_param(famp_cur560_phasePi2{3,4}, ...
                      param.feed_ampli.index, ...
                      famp_cur560_phasePi2{1,1}.point(1).parameter(param.feed_ampli.index), ...
                      0.001);

[curs_famp0303_phasePi2{1},~] = SetupStst( ...
    funcs, ...
    'contpar',[param.J.index, param.omega1.index], ...
    'corpar',[param.omega1.index],...
    'x', famp_cur560_phasePi2{1,1}.point(1).x, ...
    'parameter', famp_cur560_phasePi2{1,1}.point(1).parameter,...
    opt_inputs{:},...
    st_cur{:});

pars = famp_cur560_phasePi2{3,4}.point(next_pt).parameter;
pars(param.feed_ampli.index) = famp_cur560_phasePi2{1,1}.point(1).parameter(param.feed_ampli.index);
[curs_famp0303_phasePi2{2},~] = SetupStst( ...
    funcs, ...
    'contpar',[param.J.index, param.omega1.index], ...
    'corpar',[param.omega1.index],...
    'x', famp_cur560_phasePi2{3,4}.point(next_pt).x, ...
    'parameter', pars,...
    opt_inputs{:},...
    st_cur{:});

for i = 1:2
    curs_famp0303_phasePi2{i} = bcont( funcs, curs_famp0303_phasePi2{i}, ...
                                1000, 1000 );
    curs_famp0303_phasePi2{i} = branch_stability(funcs, curs_famp0303_phasePi2{i});
end

%% continue the fold
[fold_cur_famp_funcs, fold_cur_famp_phasePi2, ~]=SetupRWFold( ...
    funcs, ...
    curs_famp0303_phasePi2{1}, ...
    curs_famp0303_phasePi2{1}.indFold(1),...
    'contpar', ...
    [param.J.index, param.feed_ampli.index, param.omega1.index], ...
    'dir',param.feed_ampli.index, ...
    opt_inputs{:},...
    st_bif_cur_amp{:}); 

fold_cur_famp_phasePi2 = bcont( fold_cur_famp_funcs, ...
                              fold_cur_famp_phasePi2, ...
                              100, ...
                              100 );

%% same for pi/4
curs_famp0303_phasePi4 = {};
next_pt = branch_pts_near_param(famp_cur560_phasePi4{3,4}, ...
                      param.feed_ampli.index, ...
                      famp_cur560_phasePi4{1,1}.point(1).parameter(param.feed_ampli.index), ...
                      0.001);

[curs_famp0303_phasePi4{1},~] = SetupStst( ...
    funcs, ...
    'contpar',[param.J.index, param.omega1.index], ...
    'corpar',[param.omega1.index],...
    'x', famp_cur560_phasePi4{1,1}.point(1).x, ...
    'parameter', famp_cur560_phasePi4{1,1}.point(1).parameter,...
    opt_inputs{:},...
    st_cur{:});

pars = famp_cur560_phasePi4{3,4}.point(next_pt).parameter;
pars(param.feed_ampli.index) = famp_cur560_phasePi4{1,1}.point(1).parameter(param.feed_ampli.index);
[curs_famp0303_phasePi4{2},~] = SetupStst( ...
    funcs, ...
    'contpar',[param.J.index, param.omega1.index], ...
    'corpar',[param.omega1.index],...
    'x', famp_cur560_phasePi4{3,4}.point(next_pt).x, ...
    'parameter', pars,...
    opt_inputs{:},...
    st_cur{:});

for i = 1:2
    curs_famp0303_phasePi4{i} = bcont( funcs, curs_famp0303_phasePi4{i}, ...
                                1000, 1000 );
    curs_famp0303_phasePi4{i} = branch_stability(funcs, curs_famp0303_phasePi4{i});
end

%% continue the fold
[fold_cur_famp_funcs, fold_cur_famp_phasePi4, ~]=SetupRWFold( ...
    funcs, ...
    curs_famp0303_phasePi4{1}, ...
    curs_famp0303_phasePi4{1}.indFold(1),...
    'contpar', ...
    [param.J.index, param.feed_ampli.index, param.omega1.index], ...
    'dir',param.feed_ampli.index, ...
    opt_inputs{:},...
    st_bif_cur_amp{:}); 

fold_cur_famp_phasePi4 = bcont( fold_cur_famp_funcs, ...
                              fold_cur_famp_phasePi4, ...
                              100, ...
                              100 );
                          
%% save?
if 0
    save(strcat(data_directory(), 'specific_bifurcations/current'), ...
        'curs_famp0304_phase0', 'curs_famp0303_phasePi2', 'curs_famp0303_phasePi4', ...
        'param', 'funcs', 'fold_cur_famp_funcs', ...
        'fold_cur_famp_phase0', 'fold_cur_famp_phasePi2', 'fold_cur_famp_phasePi4', ...
        'opt_inputs')
end


%% plot phase 0
figure
for i = 1:2
    plot_branch3( cur_famp0304_phase0{i}, ...
        param, ...
        'axes_indParam', {param.feed_ampli.index, param.J.index, 'x1'}, ...
        'nunst_color', cur_famp0304_phase0{i}.nunst, ...
        'add_2_gcf', 1)
end

plot_branch3( fold_cur_famp_phase0, ...
    param, ...
    'axes_indParam', {param.feed_ampli.index, param.J.index, 'x1'}, ...
    'color', 'r', ...
    'PlotStyle', { 'LineStyle', '-', 'Marker', '.' }, ...
    'add_2_gcf', 1)

% plot_branch3( hopf_cur_famp_phase0, ...
%     param, ...
%     'axes_indParam', {param.feed_ampli.index, param.J.index, 'x1'}, ...
%     'color', 'r', ...
%     'PlotStyle', { 'LineStyle', '-', 'Marker', '.' }, ...
%     'add_2_gcf', 1)
                

%% plot phase pi/2
figure
for i = 1:2
    plot_branch3( curs_famp0303_phasePi2{i}, ...
        param, ...
        'axes_indParam', {param.feed_ampli.index, param.J.index, 'x1'}, ...
        'nunst_color', curs_famp0303_phasePi2{i}.nunst, ...
        'add_2_gcf', 1)
end

plot_branch3( fold_cur_famp_phasePi2, ...
    param, ...
    'axes_indParam', {param.feed_ampli.index, param.J.index, 'x1'}, ...
    'color', 'r', ...
    'PlotStyle', { 'LineStyle', '-', 'Marker', '.' }, ...
    'add_2_gcf', 1)

%% plot phase pi/4
figure
for i = 1:2
    plot_branch3( curs_famp0303_phasePi4{i}, ...
        param, ...
        'axes_indParam', {param.feed_ampli.index, param.J.index, 'x1'}, ...
        'nunst_color', curs_famp0303_phasePi4{i}.nunst, ...
        'add_2_gcf', 1)
end

plot_branch3( fold_cur_famp_phasePi4, ...
    param, ...
    'axes_indParam', {param.feed_ampli.index, param.J.index, 'x1'}, ...
    'color', 'r', ...
    'PlotStyle', { 'LineStyle', '-', 'Marker', '.' }, ...
    'add_2_gcf', 1)